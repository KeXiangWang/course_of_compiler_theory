.data
global_alphabet_length: .word 26
global_alpha: .word 97
global_scale: .word 0
global_start_char: .word 0
global_end_char: .word 0
global_arrangement: .space 40
global_alphabet: .space 104
string_0: .asciiz  "New Line."
string_1: .asciiz  "New Line."
string_2: .asciiz  "New Line."
string_3: .asciiz  "Result is "
.text
j f_main




f_swap_arrangement:
addiu $sp $sp -52
sw $ra 48($sp)
sw $fp 44($sp)
sw $s0 40($sp)
sw $s1 36($sp)
sw $s2 32($sp)
sw $s3 28($sp)
sw $s4 24($sp)
sw $s5 20($sp)
sw $s6 16($sp)
sw $s7 12($sp)
sw $a0 84($sp)
sw $a1 88($sp)
label_0:
lw $t1 84($sp)	#index1
move $t0  $t1
sll $t0 $t0 2
lw $t0 global_arrangement($t0 )
move $s0 $t0	# int_temp
lw $t3 88($sp)	#index2
move $t2  $t3
sll $t2 $t2 2
lw $t2 global_arrangement($t2 )
# arrangement
move $t8  $t1
sll $t8 $t8 2
sw $t2 global_arrangement($t8 )
# arrangement
move $t8  $t3
sll $t8 $t8 2
sw $s0 global_arrangement($t8 )
f_swap_arrangement_return:
lw $s0 40($sp)
lw $s1 36($sp)
lw $s2 32($sp)
lw $s3 28($sp)
lw $s4 24($sp)
lw $s5 20($sp)
lw $s6 16($sp)
lw $s7 12($sp)
lw $ra 48($sp)
lw $fp 44($sp)
addiu $sp $sp 52
jr $ra


f_print_chars:
addiu $sp $sp -72
sw $ra 68($sp)
sw $fp 64($sp)
sw $s0 60($sp)
sw $s1 56($sp)
sw $s2 52($sp)
sw $s3 48($sp)
sw $s4 44($sp)
sw $s5 40($sp)
sw $s6 36($sp)
sw $s7 32($sp)
label_1:
lb $t0 global_start_char	#start_char
lb $t1 global_alpha	#alpha
subu $t2 $t0 $t1 	# sub_0
move $s1 $t2	# start_index
lb $t3 global_end_char	#end_char
subu $t4 $t3 $t1 	# sub_1
move $s2 $t4	# end_index
move $s0 $s1	# i
# writeBack
sb $t0  global_start_char	#start_char
sb $t1  global_alpha	#alpha
sw $t2 16($sp)	# sub_0
sb $t3  global_end_char	#end_char
sw $t4 12($sp)	# sub_1
# end writeBack
label_2:
li $v0 11  # printf char
move $a0  $s0
sll $a0 $a0 2
lb $a0 global_alphabet($a0 )
syscall
addiu $t0 $s0 1 	# add_2
move $s0 $t0	# i
# writeBack
sw $t0 8($sp)	# add_2
# end writeBack
bgt $s0 $s2 label_3
# writeBack
# end writeBack
j label_2
# writeBack
# end writeBack
label_3:
li $v0 4  # printf string
la $a0 string_0
syscall
subu $t0 $s2 $s1 	# sub_3
lb $t1 global_alpha	#alpha
addu $t2 $t0 $t1 	# add_4
move $v0 $t2
j f_print_chars_return
# writeBack
sw $t0 4($sp)	# sub_3
sb $t1  global_alpha	#alpha
sw $t2 0($sp)	# add_4
# end writeBack
f_print_chars_return:
lw $s0 60($sp)
lw $s1 56($sp)
lw $s2 52($sp)
lw $s3 48($sp)
lw $s4 44($sp)
lw $s5 40($sp)
lw $s6 36($sp)
lw $s7 32($sp)
lw $ra 68($sp)
lw $fp 64($sp)
addiu $sp $sp 72
jr $ra


f_full_arrange:
addiu $sp $sp -64
sw $ra 60($sp)
sw $fp 56($sp)
sw $s0 52($sp)
sw $s1 48($sp)
sw $s2 44($sp)
sw $s3 40($sp)
sw $s4 36($sp)
sw $s5 32($sp)
sw $s6 28($sp)
sw $s7 24($sp)
sw $a0 96($sp)
label_4:
lw $t0 global_scale	#scale
subiu $t1 $t0 1 	# sub_5
lw $t2 96($sp)	#current_level
# writeBack
sw $t0  global_scale	#scale
sw $t1 12($sp)	# sub_5
sw $t2 96($sp)	# current_level
# end writeBack
bne $t2 $t1 label_5
# writeBack
# end writeBack
label_6:
li $s0 0	# i
# writeBack
# end writeBack
label_7:
lw $t0 global_scale	#scale
# writeBack
sw $t0  global_scale	#scale
# end writeBack
bge $s0 $t0 label_8
li $v0 1  # printf int
move $a0  $s0
sll $a0 $a0 2
lw $a0 global_arrangement($a0 )
syscall
addiu $t0 $s0 1 	# add_6
move $s0 $t0	# i
# writeBack
sw $t0 8($sp)	# add_6
# end writeBack
j label_7
# writeBack
# end writeBack
label_8:
li $v0 4  # printf string
la $a0 string_1
syscall
# writeBack
# end writeBack
j label_9
# writeBack
# end writeBack
label_5:
lw $t0 96($sp)	#current_level
move $s0 $t0	# i
# writeBack
sw $t0 96($sp)	# current_level
# end writeBack
label_10:
lw $t0 global_scale	#scale
# writeBack
sw $t0  global_scale	#scale
# end writeBack
bge $s0 $t0 label_11
# call voidfunc: swap_arrangement
addiu $sp $sp -8
move $a0 $s0
lw $a1 104($sp)	#current_level
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_swap_arrangement
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
lw $a0 96($sp)
# back from voidfunc: swap_arrangement
lw $t0 96($sp)	#current_level
addiu $t1 $t0 1 	# add_7
# call voidfunc: full_arrange
addiu $sp $sp -4
move $a0 $t1
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_full_arrange
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 96($sp)
# back from voidfunc: full_arrange
# call voidfunc: swap_arrangement
addiu $sp $sp -8
move $a0 $s0
move $a1 $t0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_swap_arrangement
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
lw $a0 96($sp)
# back from voidfunc: swap_arrangement
addiu $t2 $s0 1 	# add_8
move $s0 $t2	# i
# writeBack
sw $t0 96($sp)	# current_level
sw $t1 4($sp)	# add_7
sw $t2 0($sp)	# add_8
# end writeBack
j label_10
# writeBack
# end writeBack
label_11:
# writeBack
# end writeBack
label_9:
f_full_arrange_return:
lw $s0 52($sp)
lw $s1 48($sp)
lw $s2 44($sp)
lw $s3 40($sp)
lw $s4 36($sp)
lw $s5 32($sp)
lw $s6 28($sp)
lw $s7 24($sp)
lw $ra 60($sp)
lw $fp 56($sp)
addiu $sp $sp 64
jr $ra


f_calc:
addiu $sp $sp -140
sw $ra 136($sp)
sw $fp 132($sp)
sw $s0 128($sp)
sw $s1 124($sp)
sw $s2 120($sp)
sw $s3 116($sp)
sw $s4 112($sp)
sw $s5 108($sp)
sw $s6 104($sp)
sw $s7 100($sp)
sw $a0 172($sp)
sw $a1 176($sp)
sw $a2 180($sp)
label_12:
lw $t0 172($sp)	#op
li $t1 3	#const_int_88
# writeBack
sw $t0 172($sp)	# op
# end writeBack
ble $t0 $t1 label_13
# writeBack
# end writeBack
label_14:
lb $t0 180($sp)	#c
lw $t1 176($sp)	#a
div $t2 $t0 $t1 	# div_9
subu $t3 $t1 $t0 	# sub_10
mul $t4 $t2 $t3 	# mult_11
addu $t5 $t0 $t1 	# add_12
mul $t6 $t4 $t5 	# mult_13
addu $t7 $t1 $t6 	# add_14
sw $t1 176($sp)	# a
li $t1 2	#const_int_106
sb $t0 180($sp)	# c
lw $t0 176($sp)	#a
sw $t0 176($sp)	# a
mul $t0 $t1 $t0 	# mult_15
sw $t0 60($sp)	# mult_15
lb $t0 180($sp)	#c
lw $t1 60($sp)	#mult_15
sb $t0 180($sp)	# c
subu $t0 $t0 $t1 	# sub_16
sw $t0 56($sp)	# sub_16
lw $t0 176($sp)	#a
sw $t1 60($sp)	# mult_15
lw $t1 56($sp)	#sub_16
sw $t0 176($sp)	# a
div $t0 $t0 $t1 	# div_17
sw $t0 52($sp)	# div_17
subu $t0 $t7 $t0 	# sub_18
move $v0 $t0
j f_calc_return
# writeBack
sw $t0 48($sp)	# sub_18
sw $t1 56($sp)	# sub_16
sw $t2 84($sp)	# div_9
sw $t3 80($sp)	# sub_10
sw $t4 76($sp)	# mult_11
sw $t5 72($sp)	# add_12
sw $t6 68($sp)	# mult_13
sw $t7 64($sp)	# add_14
# end writeBack
# writeBack
# end writeBack
label_13:
lw $t0 172($sp)	#op
li $t1 1	#const_int_116
# writeBack
sw $t0 172($sp)	# op
# end writeBack
blt $t0 $t1 label_15
# writeBack
# end writeBack
label_16:
li $t0 3	#const_int_119
li $t1 6	#const_int_120
mul $t2 $t0 $t1 	# mult_19
lb $t3 180($sp)	#c
mul $t4 $t2 $t3 	# mult_20
lw $t5 176($sp)	#a
div $t6 $t4 $t5 	# div_21
subu $t7 $t6 $t5 	# sub_22
sw $t5 176($sp)	# a
subu $t5 $t7 $t3 	# sub_23
move $v0 $t5
j f_calc_return
# writeBack
sw $t2 44($sp)	# mult_19
sb $t3 180($sp)	# c
sw $t4 40($sp)	# mult_20
sw $t5 28($sp)	# sub_23
sw $t6 36($sp)	# div_21
sw $t7 32($sp)	# sub_22
# end writeBack
# writeBack
# end writeBack
label_15:
li $t0 -4 	# sub_24
lw $t1 172($sp)	#op
# writeBack
sw $t0 24($sp)	# sub_24
sw $t1 172($sp)	# op
# end writeBack
bge $t1 $t0 label_17
# writeBack
# end writeBack
label_18:
lw $t0 176($sp)	#a
mul $t1 $t0 $t0 	# mult_25
lb $t2 180($sp)	#c
mul $t3 $t1 $t2 	# mult_26
li $t4 7	#const_int_144
mul $t5 $t3 $t4 	# mult_27
move $v0 $t5
j f_calc_return
# writeBack
sw $t0 176($sp)	# a
sw $t1 20($sp)	# mult_25
sb $t2 180($sp)	# c
sw $t3 16($sp)	# mult_26
sw $t5 12($sp)	# mult_27
# end writeBack
# writeBack
# end writeBack
label_17:
li $t0 -2 	# sub_28
lw $t1 172($sp)	#op
# writeBack
sw $t0 8($sp)	# sub_28
sw $t1 172($sp)	# op
# end writeBack
bgt $t1 $t0 label_19
# writeBack
# end writeBack
label_20:
lb $t0 180($sp)	#c
addiu $t1 $t0 1 	# add_29
lw $t2 176($sp)	#a
div $t3 $t2 $t1 	# div_30
move $v0 $t3
j f_calc_return
# writeBack
sb $t0 180($sp)	# c
sw $t1 4($sp)	# add_29
sw $t2 176($sp)	# a
sw $t3 0($sp)	# div_30
# end writeBack
# writeBack
# end writeBack
label_19:
lw $t0 172($sp)	#op
li $t1 0	#const_int_164
# writeBack
sw $t0 172($sp)	# op
# end writeBack
beq $t0 $t1 label_21
# writeBack
# end writeBack
label_22:
lw $v0 176($sp)	#a
j f_calc_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_21:
lb $v0 180($sp)	#c
j f_calc_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_23:
# writeBack
# end writeBack
label_24:
# writeBack
# end writeBack
label_25:
# writeBack
# end writeBack
label_26:
# writeBack
# end writeBack
label_27:
f_calc_return:
lw $s0 128($sp)
lw $s1 124($sp)
lw $s2 120($sp)
lw $s3 116($sp)
lw $s4 112($sp)
lw $s5 108($sp)
lw $s6 104($sp)
lw $s7 100($sp)
lw $ra 136($sp)
lw $fp 132($sp)
addiu $sp $sp 140
jr $ra


f_main:
addiu $sp $sp -80
label_28:
li $v0 5
syscall
sw $v0  global_scale	#scale
li $s0 0	# i
# writeBack
# end writeBack
label_29:
lw $t0 global_scale	#scale
# writeBack
sw $t0  global_scale	#scale
# end writeBack
bge $s0 $t0 label_30
addiu $t0 $s0 1 	# add_31
# arrangement
move $t8  $s0
sll $t8 $t8 2
sw $t0 global_arrangement($t8 )
addiu $t1 $s0 1 	# add_32
move $s0 $t1	# i
# writeBack
sw $t0 24($sp)	# add_31
sw $t1 20($sp)	# add_32
# end writeBack
j label_29
# writeBack
# end writeBack
label_30:
# call voidfunc: full_arrange
addiu $sp $sp -4
li $a0 0	#const_int_192
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_full_arrange
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
# back from voidfunc: full_arrange
li $s0 0	# i
# writeBack
# end writeBack
label_31:
lw $t0 global_alphabet_length	#alphabet_length
# writeBack
sw $t0  global_alphabet_length	#alphabet_length
# end writeBack
bge $s0 $t0 label_32
lb $t0 global_alpha	#alpha
addu $t1 $t0 $s0 	# add_33
# alphabet
move $t8  $s0
sll $t8 $t8 2
sb $t1 global_alphabet($t8 )
addiu $t2 $s0 1 	# add_34
move $s0 $t2	# i
# writeBack
sb $t0  global_alpha	#alpha
sw $t1 16($sp)	# add_33
sw $t2 12($sp)	# add_34
# end writeBack
j label_31
# writeBack
# end writeBack
label_32:
li $v0 12
syscall
sb $v0  global_start_char	#start_char
li $v0 12
syscall
sb $v0  global_end_char	#end_char
# call func: print_chars
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_print_chars
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
move $t0 $v0
# back from func: print_chars
move $s1 $t0	# result
li $v0 1  # printf int
move $a0 $s1
syscall
lb $t1 global_end_char	#end_char
lb $t2 global_start_char	#start_char
subu $t3 $t1 $t2 	# sub_35
li $v0 4  # printf string
la $a0 string_2
syscall
li $v0 1  # printf int
move $a0 $t3
syscall
# writeBack
sb $t0 8($sp)	# fcall_214
sb $t1  global_end_char	#end_char
sb $t2  global_start_char	#start_char
sw $t3 4($sp)	# sub_35
# end writeBack
label_33:
li $v0 5
syscall
move $s2 $v0
# call func: calc
addiu $sp $sp -12
move $a0 $s2
lw $a1 global_alphabet_length	#alphabet_length
lb $a2 global_alpha	#alpha
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_calc
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 12
move $t0 $v0
# back from func: calc
move $s1 $t0	# result
li $v0 4  # printf string
la $a0 string_3
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
li $t1 0	#const_int_234
# writeBack
sw $t0 0($sp)	# fcall_227
# end writeBack
beq $s2 $t1 label_34
# writeBack
# end writeBack
j label_33
# writeBack
# end writeBack
label_34:
j f_main_return
# writeBack
# end writeBack
f_main_return:
