.data
global_num: .word 33
global_number1: .word 35
global_number2: .word 36
global_number6: .word 0
global_str: .word 49
global_str1: .word 97
global_str2: .word 101
global_str3: .word 57
global_str4: .word 43
global_str5: .word 42
global_i: .word 0
global_letter_only: .word 0
global_number3: .word 0
global_number4: .space 400
global_only_letter: .word 0
global_str6: .word 0
global_str7: .space 800
global_cal: .space 400
global_temp_cal: .word 0
string_0: .asciiz  "Too small"
string_1: .asciiz  "\\n"
string_2: .asciiz  "The current character is:"
string_3: .asciiz  "\\n"
string_4: .asciiz  "i is Bigger than 200\\n"
string_5: .asciiz  "\\n"
string_6: .asciiz  "\\n a is"
string_7: .asciiz  "\\n b is"
string_8: .asciiz  "\\n c is"
string_9: .asciiz  "\\n d is"
string_10: .asciiz  "\\n e is"
string_11: .asciiz  "\\n f is"
string_12: .asciiz  "\\n g is"
string_13: .asciiz  "\\n"
string_14: .asciiz  "\\nonly_letter is:"
string_15: .asciiz  "\\nletter_only is:"
string_16: .asciiz  "\\nThe second g is: "
string_17: .asciiz  "\\n"
string_18: .asciiz  "\\n"
string_19: .asciiz  "Calculate the result_2 is: "
string_20: .asciiz  "\\n"
string_21: .asciiz  "Calculate the result_3 is: "
string_22: .asciiz  "\\n"
string_23: .asciiz  "\\n"
string_24: .asciiz  "Calculate the result_1 is: "
string_25: .asciiz  "\\n"
string_26: .asciiz  "Calculate the result_4 is: "
string_27: .asciiz  "\\n"
string_28: .asciiz  "The "
string_29: .asciiz  "-th Fibonacci sequence number is:"
string_30: .asciiz  "\\n"
string_31: .asciiz  "    "
string_32: .asciiz  "\\n"
string_33: .asciiz  "   "
string_34: .asciiz  "\\n"
string_35: .asciiz  "     "
string_36: .asciiz  "\\n"
.text
j f_main




f_function1:
addiu $sp $sp -64
sw $ra 60($sp)
sw $fp 56($sp)
sw $s0 52($sp)
sw $s1 48($sp)
sw $s2 44($sp)
sw $s3 40($sp)
sw $s4 36($sp)
sw $s5 32($sp)
sw $s6 28($sp)
sw $s7 24($sp)
sw $a0 96($sp)
label_0:
lw $t0 96($sp)	#parameter1
li $t1 1	#const_int_2
# writeBack
sw $t0 96($sp)	# parameter1
# end writeBack
bgt $t0 $t1 label_1
# writeBack
# end writeBack
label_2:
lw $v0 96($sp)	#parameter1
j f_function1_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_1:
lw $t0 96($sp)	#parameter1
subiu $t1 $t0 1 	# sub_0
# call func: function1
addiu $sp $sp -4
move $a0 $t1
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 96($sp)
move $t2 $v0
# back from func: function1
subiu $t3 $t0 2 	# sub_1
# call func: function1
addiu $sp $sp -4
move $a0 $t3
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 96($sp)
move $t4 $v0
# back from func: function1
addu $t5 $t2 $t4 	# add_2
move $v0 $t5
j f_function1_return
# writeBack
sw $t0 96($sp)	# parameter1
sw $t1 16($sp)	# sub_0
sw $t2 12($sp)	# fcall_12
sw $t3 8($sp)	# sub_1
sw $t4 4($sp)	# fcall_16
sw $t5 0($sp)	# add_2
# end writeBack
# writeBack
# end writeBack
label_3:
f_function1_return:
lw $s0 52($sp)
lw $s1 48($sp)
lw $s2 44($sp)
lw $s3 40($sp)
lw $s4 36($sp)
lw $s5 32($sp)
lw $s6 28($sp)
lw $s7 24($sp)
lw $ra 60($sp)
lw $fp 56($sp)
addiu $sp $sp 64
jr $ra


f_function2:
addiu $sp $sp -72
sw $ra 68($sp)
sw $fp 64($sp)
sw $s0 60($sp)
sw $s1 56($sp)
sw $s2 52($sp)
sw $s3 48($sp)
sw $s4 44($sp)
sw $s5 40($sp)
sw $s6 36($sp)
sw $s7 32($sp)
sw $a0 104($sp)
sw $a1 108($sp)
label_4:
lb $t0 108($sp)	#parameter4
li $t1 90	#const_char_20
# writeBack
sb $t0 108($sp)	# parameter4
# end writeBack
bgt $t0 $t1 label_5
# writeBack
# end writeBack
label_6:
li $v0 4  # printf string
la $a0 string_0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_1
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 115	#const_char_25
j f_function2_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_5:
lb $t0 108($sp)	#parameter4
move $s0 $t0	# temp_num_2
# writeBack
sb $t0 108($sp)	# parameter4
# end writeBack
label_7:
subiu $t0 $s0 1 	# sub_3
move $s0 $t0	# temp_num_2
li $t1 111	#const_int_36
# writeBack
sw $t0 4($sp)	# sub_3
# end writeBack
bne $s0 $t1 label_8
# writeBack
# end writeBack
label_9:
li $v0 4  # printf string
la $a0 string_2
syscall
li $v0 11  # printf char
li $a0 111	#const_char_39
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_3
syscall
li $v0 11  # char
li $a0 10
syscall
# writeBack
# end writeBack
j label_10
# writeBack
# end writeBack
label_8:
# writeBack
# end writeBack
label_10:
li $t0 97	#const_int_45
# writeBack
# end writeBack
beq $s0 $t0 label_11
# writeBack
# end writeBack
j label_7
# writeBack
# end writeBack
label_11:
# writeBack
# end writeBack
label_12:
lw $t0 104($sp)	#parameter3
move $s1 $t0	# i
# writeBack
sw $t0 104($sp)	# parameter3
# end writeBack
label_13:
li $t0 97	#const_int_53
# writeBack
# end writeBack
ble $s1 $t0 label_14
lw $t0 104($sp)	#parameter3
li $t1 200	#const_int_57
# writeBack
sw $t0 104($sp)	# parameter3
# end writeBack
blt $t0 $t1 label_15
# writeBack
# end writeBack
label_16:
li $s1 96	# i
li $v0 4  # printf string
la $a0 string_4
syscall
li $v0 11  # char
li $a0 10
syscall
# writeBack
# end writeBack
j label_17
# writeBack
# end writeBack
label_15:
# writeBack
# end writeBack
label_17:
subiu $t0 $s1 1 	# sub_4
move $s1 $t0	# i
# writeBack
sw $t0 0($sp)	# sub_4
# end writeBack
j label_13
# writeBack
# end writeBack
label_14:
li $v0 114	#const_char_71
j f_function2_return
# writeBack
# end writeBack
f_function2_return:
lw $s0 60($sp)
lw $s1 56($sp)
lw $s2 52($sp)
lw $s3 48($sp)
lw $s4 44($sp)
lw $s5 40($sp)
lw $s6 36($sp)
lw $s7 32($sp)
lw $ra 68($sp)
lw $fp 64($sp)
addiu $sp $sp 72
jr $ra


f_function3:
addiu $sp $sp -96
sw $ra 92($sp)
sw $fp 88($sp)
sw $s0 84($sp)
sw $s1 80($sp)
sw $s2 76($sp)
sw $s3 72($sp)
sw $s4 68($sp)
sw $s5 64($sp)
sw $s6 60($sp)
sw $s7 56($sp)
label_18:
li $s0 72	# temp_str
li $s2 300	# temp_num1
# call func: function2
addiu $sp $sp -8
move $a0 $s2
move $a1 $s0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function2
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
move $t0 $v0
# back from func: function2
move $s1 $t0	# result_str
li $v0 11  # printf char
move $a0 $s1
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_5
syscall
li $v0 11  # char
li $a0 10
syscall
subiu $t1 $s0 1 	# sub_5
# str7
move $t8  $t1
sll $t8 $t8 2
sb $s1 global_str7($t8 )
li $s0 98	# temp_str
subiu $t2 $s2 100 	# sub_6
# call func: function2
addiu $sp $sp -8
move $a0 $t2
move $a1 $s0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function2
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
move $t3 $v0
# back from func: function2
move $s1 $t3	# result_str
subiu $t4 $s0 1 	# sub_7
# str7
move $t8  $t4
sll $t8 $t8 2
sb $s1 global_str7($t8 )
li $s0 119	# temp_str
subiu $t5 $s2 200 	# sub_8
addiu $t6 $t5 100 	# add_9
# call func: function2
addiu $sp $sp -8
move $a0 $t6
move $a1 $s0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function2
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
move $t7 $v0
# back from func: function2
move $s1 $t7	# result_str
sb $t0 32($sp)	# fcall_79
subiu $t0 $s0 1 	# sub_10
# str7
move $t8  $t0
sll $t8 $t8 2
sb $s1 global_str7($t8 )
sw $t0 0($sp)	# sub_10
li $t0 15	#const_int_118
# number4
li $t8 90	#const_int_117
sll $t8 $t8 2
sw $t0 global_number4($t8 )
li $t0 17	#const_int_121
# number4
li $t8 98	#const_int_120
sll $t8 $t8 2
sw $t0 global_number4($t8 )
li $t0 17	#const_int_124
# number4
li $t8 99	#const_int_123
sll $t8 $t8 2
sw $t0 global_number4($t8 )
j f_function3_return
# writeBack
sw $t1 28($sp)	# sub_5
sw $t2 24($sp)	# sub_6
sb $t3 20($sp)	# fcall_95
sw $t4 16($sp)	# sub_7
sw $t5 12($sp)	# sub_8
sw $t6 8($sp)	# add_9
sb $t7 4($sp)	# fcall_110
# end writeBack
f_function3_return:
lw $s0 84($sp)
lw $s1 80($sp)
lw $s2 76($sp)
lw $s3 72($sp)
lw $s4 68($sp)
lw $s5 64($sp)
lw $s6 60($sp)
lw $s7 56($sp)
lw $ra 92($sp)
lw $fp 88($sp)
addiu $sp $sp 96
jr $ra


f_function_cal:
addiu $sp $sp -108
sw $ra 104($sp)
sw $fp 100($sp)
sw $s0 96($sp)
sw $s1 92($sp)
sw $s2 88($sp)
sw $s3 84($sp)
sw $s4 80($sp)
sw $s5 76($sp)
sw $s6 72($sp)
sw $s7 68($sp)
label_19:
li $s2 0	# cal_num1
li $s3 0	# cal_flag
li $s1 0	# cal_result
li $s0 0	# i
# writeBack
# end writeBack
label_20:
li $t0 10	#const_int_136
# writeBack
# end writeBack
bge $s0 $t0 label_21
li $v0 12
syscall
move $s5 $v0
# cal
move $t8  $s0
sll $t8 $t8 2
sb $s5 global_cal($t8 )
addiu $t0 $s0 1 	# add_11
move $s0 $t0	# i
# writeBack
sw $t0 36($sp)	# add_11
# end writeBack
j label_20
# writeBack
# end writeBack
label_21:
li $s0 0	# i
# writeBack
# end writeBack
label_22:
li $t0 10	#const_int_153
# writeBack
# end writeBack
bge $s0 $t0 label_23
li $s2 0	# cal_num1
# writeBack
# end writeBack
label_24:
move $t0  $s0
sll $t0 $t0 2
lb $t0 global_cal($t0 )
	# temp_cal
sb $t0  global_temp_cal	#temp_cal
lb $t1 global_temp_cal	#temp_cal
li $t2 48	#const_char_162
# writeBack
sb $t1  global_temp_cal	#temp_cal
# end writeBack
blt $t1 $t2 label_25
# writeBack
# end writeBack
label_26:
lb $t0 global_temp_cal	#temp_cal
subiu $t1 $t0 48 	# sub_12
move $s4 $t1	# cal_num
li $t2 10	#const_int_169
mul $t3 $t2 $s2 	# mult_13
addu $t4 $t3 $s4 	# add_14
move $s2 $t4	# cal_num1
addiu $t5 $s0 1 	# add_15
move $s0 $t5	# i
# writeBack
sb $t0  global_temp_cal	#temp_cal
sw $t1 32($sp)	# sub_12
sw $t3 28($sp)	# mult_13
sw $t4 24($sp)	# add_14
sw $t5 20($sp)	# add_15
# end writeBack
j label_27
# writeBack
# end writeBack
label_25:
# writeBack
# end writeBack
label_27:
lb $t0 global_temp_cal	#temp_cal
li $t1 48	#const_char_182
# writeBack
sb $t0  global_temp_cal	#temp_cal
# end writeBack
blt $t0 $t1 label_28
# writeBack
# end writeBack
j label_24
# writeBack
# end writeBack
label_28:
addiu $t0 $s3 1 	# add_16
move $s3 $t0	# cal_flag
li $t1 1	#const_int_192
# writeBack
sw $t0 16($sp)	# add_16
# end writeBack
bne $s3 $t1 label_29
# writeBack
# end writeBack
label_30:
addu $t0 $s1 $s2 	# add_17
move $s1 $t0	# cal_result
# writeBack
sw $t0 12($sp)	# add_17
# end writeBack
j label_31
# writeBack
# end writeBack
label_29:
lb $t0 global_temp_cal	#temp_cal
lb $t1 global_str4	#str4
# writeBack
sb $t0  global_temp_cal	#temp_cal
sb $t1  global_str4	#str4
# end writeBack
bne $t0 $t1 label_32
# writeBack
# end writeBack
label_33:
addu $t0 $s1 $s2 	# add_18
move $s1 $t0	# cal_result
# writeBack
sw $t0 8($sp)	# add_18
# end writeBack
j label_34
# writeBack
# end writeBack
label_32:
addu $t0 $s1 $s2 	# add_19
move $s1 $t0	# cal_result
# writeBack
sw $t0 4($sp)	# add_19
# end writeBack
label_34:
# writeBack
# end writeBack
label_31:
addiu $t0 $s0 1 	# add_20
move $s0 $t0	# i
# writeBack
sw $t0 0($sp)	# add_20
# end writeBack
j label_22
# writeBack
# end writeBack
label_23:
move $v0 $s1
j f_function_cal_return
# writeBack
# end writeBack
f_function_cal_return:
lw $s0 96($sp)
lw $s1 92($sp)
lw $s2 88($sp)
lw $s3 84($sp)
lw $s4 80($sp)
lw $s5 76($sp)
lw $s6 72($sp)
lw $s7 68($sp)
lw $ra 104($sp)
lw $fp 100($sp)
addiu $sp $sp 108
jr $ra


f_Complex_Compute:
addiu $sp $sp -736
sw $ra 732($sp)
sw $fp 728($sp)
sw $s0 724($sp)
sw $s1 720($sp)
sw $s2 716($sp)
sw $s3 712($sp)
sw $s4 708($sp)
sw $s5 704($sp)
sw $s6 700($sp)
sw $s7 696($sp)
lw $s0 668($sp)	#g
label_35:
li $t0 100	#const_int_224
# array
li $t8 99	#const_int_223
sll $t8 $t8 2
addu $t8 $t8 $sp
sw $t0 240($t8 )
li $t2 99	#const_int_227
move $t1  $t2
sll $t1 $t1 2
addu $t1 $t1 $sp
lw $t1 240($t1 )
subiu $t3 $t1 90 	# sub_21
# array
li $t8 0	#const_int_226
sll $t8 $t8 2
addu $t8 $t8 $sp
sw $t3 240($t8 )
li $s6 1	# a
lw $t4 global_number1	#number1
move $s4 $t4	# b
lw $t5 global_number2	#number2
move $s3 $t5	# c
lw $t6 global_num	#num
subu $t7 $t5 $t6 	# sub_22
move $s5 $t7	# d
sw $t5  global_number2	#number2
addu $t5 $s4 $s3 	# add_23
sw $t4  global_number1	#number1
subu $t4 $t5 $s5 	# sub_24
move $s1 $t4	# e
sw $t6  global_num	#num
addu $t6 $s3 $s6 	# add_25
subu $t0 $t6 $s5 	# sub_26
move $s2 $t0	# f
li $v0 4  # printf string
la $a0 string_6
syscall
li $v0 1  # printf int
move $a0 $s6
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_7
syscall
li $v0 1  # printf int
move $a0 $s4
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_8
syscall
li $v0 1  # printf int
move $a0 $s3
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_9
syscall
li $v0 1  # printf int
move $a0 $s5
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_10
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_11
syscall
li $v0 1  # printf int
move $a0 $s2
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_12
syscall
li $v0 1  # printf int
move $a0 $s0
syscall
li $v0 11  # char
li $a0 10
syscall
li $s7 120	# x
sw $t0 216($sp)	# sub_26
li $t0 121	# y
li $v0 4  # printf string
la $a0 string_13
syscall
li $v0 11  # char
li $a0 10
syscall
sw $t0 660($sp)	# y
subu $t0 $s3 $s5 	# sub_27
li $t1 90	#const_int_276
move $t1  $t1
sll $t1 $t1 2
lw $t1 global_number4($t1 )
sw $t0 212($sp)	# sub_27
addu $t0 $t0 $t1 	# add_28
li $t1 12	#const_int_279
sw $t0 208($sp)	# add_28
div $t0 $t0 $t1 	# div_29
sw $t0 204($sp)	# div_29
addiu $t0 $t0 32 	# add_30
sw $t0 200($sp)	# add_30
lw $t0 660($sp)	#y
sw $t0 660($sp)	# y
subiu $t0 $t0 120 	# sub_31
sw $t0 196($sp)	# sub_31
mul $t0 $s7 $t0 	# mult_32
sw $t0 192($sp)	# mult_32
subu $t0 $t0 $s4 	# sub_33
sw $t0 188($sp)	# sub_33
lw $t0 200($sp)	#add_30
lw $t1 188($sp)	#sub_33
sw $t0 200($sp)	# add_30
subu $t0 $t0 $t1 	# sub_34
	# letter_only
sw $t0  global_letter_only	#letter_only
li $v0 4  # printf string
la $a0 string_14
syscall
li $v0 1  # printf int
lw $a0 global_letter_only	#letter_only
syscall
li $v0 11  # char
li $a0 10
syscall
sw $t0 184($sp)	# sub_34
addu $t0 $s4 $s3 	# add_35
sw $t0 180($sp)	# add_35
addu $t0 $t0 $s3 	# add_36
# call func: function1
addiu $sp $sp -4
sw $t0 176($sp)	# add_36
li $t0 0	#const_int_299
move $a0  $t0
sll $a0 $a0 2
addu $a0 $a0 $sp
lw $a0 244($a0 )
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
move $t0 $v0
# back from func: function1
sw $t0 172($sp)	# fcall_301
lw $t0 176($sp)	#add_36
sw $t1 188($sp)	# sub_33
lw $t1 172($sp)	#fcall_301
sw $t0 176($sp)	# add_36
addu $t0 $t0 $t1 	# add_37
	# letter_only
sw $t0  global_letter_only	#letter_only
li $v0 4  # printf string
la $a0 string_15
syscall
li $v0 1  # printf int
lw $a0 global_letter_only	#letter_only
syscall
li $v0 11  # char
li $a0 10
syscall
sw $t0 168($sp)	# add_37
li $t0 90	#const_int_306
move $t0  $t0
sll $t0 $t0 2
lw $t0 global_number4($t0 )
sw $t1 172($sp)	# fcall_301
li $t1 99	#const_int_308
move $t1  $t1
sll $t1 $t1 2
lw $t1 global_number4($t1 )
addu $t0 $t0 $t1 	# add_38
sw $t0 164($sp)	# add_38
mul $t0 $t0 $s6 	# mult_39
# call func: function1
addiu $sp $sp -4
li $a0 5	#const_int_313
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
sw $t0 160($sp)	# mult_39
move $t0 $v0
# back from func: function1
sw $t0 156($sp)	# fcall_314
mul $t0 $t0 $s4 	# mult_40
sw $t0 152($sp)	# mult_40
lw $t0 160($sp)	#mult_39
lw $t1 152($sp)	#mult_40
sw $t0 160($sp)	# mult_39
addu $t0 $t0 $t1 	# add_41
sw $t0 148($sp)	# add_41
subiu $t0 $s7 97 	# sub_42
sw $t0 144($sp)	# sub_42
addiu $t0 $t0 -32 	# add_43
sw $t0 140($sp)	# add_43
subiu $t0 $t0 -43 	# sub_44
sw $t0 136($sp)	# sub_44
lw $t0 148($sp)	#add_41
sw $t1 152($sp)	# mult_40
lw $t1 136($sp)	#sub_44
sw $t0 148($sp)	# add_41
mul $t0 $t0 $t1 	# mult_45
sw $t0 132($sp)	# mult_45
sw $t0 656($sp)	# result_1
li $t0 118	#const_int_327
move $t0  $t0
sll $t0 $t0 2
lb $t0 global_str7($t0 )
subiu $t0 $t0 97 	# sub_46
sw $t1 136($sp)	# sub_44
li $t1 32	#const_int_331
sw $t0 128($sp)	# sub_46
mul $t0 $t0 $t1 	# mult_47
sw $t0 124($sp)	# mult_47
addu $t0 $t0 $s6 	# add_48
sw $t0 120($sp)	# add_48
addu $t0 $t0 $s3 	# add_49
sw $t0 116($sp)	# add_49
li $t0 43	#const_int_338
div $t0 $s5 $t0 	# div_50
sw $t0 112($sp)	# div_50
lw $t0 116($sp)	#add_49
lw $t1 112($sp)	#div_50
sw $t0 116($sp)	# add_49
subu $t0 $t0 $t1 	# sub_51
move $s0 $t0	# g
li $v0 4  # printf string
la $a0 string_16
syscall
li $v0 1  # printf int
move $a0 $s0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_17
syscall
li $v0 11  # char
li $a0 10
syscall
sw $t0 108($sp)	# sub_51
mul $t0 $s0 $s0 	# mult_52
sw $t0 104($sp)	# mult_52
mul $t0 $t0 $s0 	# mult_53
sw $t0 100($sp)	# mult_53
div $t0 $t0 $s0 	# div_54
sw $t0 96($sp)	# div_54
div $t0 $t0 $s0 	# div_55
sw $t0 92($sp)	# div_55
div $t0 $t0 $s0 	# div_56
sw $t0 88($sp)	# div_56
subu $t0 $0 $t0 	# -div_56
sw $t0 84($sp)	# sub_57
subiu $t0 $s0 576 	# sub_58
# call func: function1
addiu $sp $sp -4
move $a0 $t0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
sw $t0 80($sp)	# sub_58
move $t0 $v0
# back from func: function1
sw $t0 76($sp)	# fcall_362
lw $t0 84($sp)	#sub_57
sw $t1 112($sp)	# div_50
lw $t1 76($sp)	#fcall_362
sw $t0 84($sp)	# sub_57
addu $t0 $t0 $t1 	# add_59
# number4
li $t8 12	#const_int_345
sll $t8 $t8 2
sw $t0 global_number4($t8 )
sw $t0 72($sp)	# add_59
addu $t0 $s1 $s2 	# add_60
sw $t0 68($sp)	# add_60
subu $t0 $s1 $s2 	# sub_61
sw $t0 64($sp)	# sub_61
lw $t0 68($sp)	#add_60
sw $t1 76($sp)	# fcall_362
lw $t1 64($sp)	#sub_61
sw $t0 68($sp)	# add_60
mul $t0 $t0 $t1 	# mult_62
sw $t0 60($sp)	# mult_62
div $t0 $s1 $s2 	# div_63
sw $t0 56($sp)	# div_63
lw $t0 60($sp)	#mult_62
sw $t1 64($sp)	# sub_61
lw $t1 56($sp)	#div_63
sw $t0 60($sp)	# mult_62
div $t0 $t0 $t1 	# div_64
sw $t1 56($sp)	# div_63
li $t1 98	#const_int_376
move $t1  $t1
sll $t1 $t1 2
lw $t1 global_number4($t1 )
sw $t0 52($sp)	# div_64
addu $t0 $t0 $t1 	# add_65
# call func: function_cal
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function_cal
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
sw $t0 48($sp)	# add_65
move $t0 $v0
# back from func: function_cal
sw $t0 44($sp)	# fcall_379
lw $t0 48($sp)	#add_65
lw $t1 44($sp)	#fcall_379
sw $t0 48($sp)	# add_65
addu $t0 $t0 $t1 	# add_66
sw $t0 40($sp)	# add_66
sw $t0 652($sp)	# result_2
addu $t0 $s1 $s2 	# add_67
sw $t0 36($sp)	# add_67
subu $t0 $s1 $s2 	# sub_68
sw $t0 32($sp)	# sub_68
lw $t0 36($sp)	#add_67
sw $t1 44($sp)	# fcall_379
lw $t1 32($sp)	#sub_68
sw $t0 36($sp)	# add_67
mul $t0 $t0 $t1 	# mult_69
sw $t0 28($sp)	# mult_69
div $t0 $s1 $s2 	# div_70
sw $t0 24($sp)	# div_70
lw $t0 28($sp)	#mult_69
sw $t1 32($sp)	# sub_68
lw $t1 24($sp)	#div_70
sw $t0 28($sp)	# mult_69
div $t0 $t0 $t1 	# div_71
# call func: function1
addiu $sp $sp -4
li $a0 6	#const_int_393
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
sw $t0 20($sp)	# div_71
move $t0 $v0
# back from func: function1
sw $t0 16($sp)	# fcall_394
lw $t0 20($sp)	#div_71
sw $t1 24($sp)	# div_70
lw $t1 16($sp)	#fcall_394
sw $t0 20($sp)	# div_71
addu $t0 $t0 $t1 	# add_72
sw $t1 16($sp)	# fcall_394
li $t1 12	#const_int_396
move $t1  $t1
sll $t1 $t1 2
lw $t1 global_number4($t1 )
sw $t0 12($sp)	# add_72
addu $t0 $t0 $t1 	# add_73
sw $t0 8($sp)	# add_73
li $v0 4  # printf string
la $a0 string_18
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_19
syscall
li $v0 1  # printf int
lw $a0 652($sp)	#result_2
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_20
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_21
syscall
li $v0 1  # printf int
move $a0 $t0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_22
syscall
li $v0 11  # char
li $a0 10
syscall
# call func: function_cal
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function_cal
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
sw $t0 648($sp)	# result_3
move $t0 $v0
# back from func: function_cal
sw $t0 4($sp)	# fcall_407
addiu $t0 $t0 10 	# add_74
sw $t0 0($sp)	# add_74
li $v0 4  # printf string
la $a0 string_23
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_24
syscall
li $v0 1  # printf int
lw $a0 656($sp)	#result_1
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_25
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_26
syscall
li $v0 1  # printf int
move $a0 $t0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_27
syscall
li $v0 11  # char
li $a0 10
syscall
f_Complex_Compute_return:
lw $s0 724($sp)
lw $s1 720($sp)
lw $s2 716($sp)
lw $s3 712($sp)
lw $s4 708($sp)
lw $s5 704($sp)
lw $s6 700($sp)
lw $s7 696($sp)
lw $ra 732($sp)
lw $fp 728($sp)
addiu $sp $sp 736
jr $ra


f_main:
addiu $sp $sp -120
li $s2 12
li $s3 13
li $t0 102
sw $t0 68($sp)
li $t0 119
sw $t0 64($sp)
label_36:
addu $t0 $s2 $s3 	# add_75
move $s0 $t0	# out_num
li $v0 5
syscall
move $s4 $v0
li $v0 12
syscall
move $t1 $v0
li $v0 12
syscall
move $t1 $v0
li $s1 0	# i
# writeBack
sw $t0 40($sp)	# add_75
# end writeBack
label_37:
# writeBack
# end writeBack
bge $s1 $s4 label_38
li $v0 4  # printf string
la $a0 string_28
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
li $v0 11  # char
li $a0 10
syscall
# call func: function1
addiu $sp $sp -4
move $a0 $s1
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
move $t0 $v0
# back from func: function1
li $v0 4  # printf string
la $a0 string_29
syscall
li $v0 1  # printf int
move $a0 $t0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_30
syscall
li $v0 11  # char
li $a0 10
syscall
addiu $t1 $s1 1 	# add_76
move $s1 $t1	# i
# writeBack
sw $t0 36($sp)	# fcall_437
sw $t1 32($sp)	# add_76
# end writeBack
j label_37
# writeBack
# end writeBack
label_38:
# call func: function1
addiu $sp $sp -4
li $a0 6	#const_int_446
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
move $t0 $v0
# back from func: function1
# call func: function1
addiu $sp $sp -4
move $a0 $t0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
move $t1 $v0
# back from func: function1
subiu $t2 $t1 19 	# sub_77
# call func: function1
addiu $sp $sp -4
move $a0 $t2
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function1
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
move $t3 $v0
# back from func: function1
move $s0 $t3	# out_num
li $v0 4  # printf string
la $a0 string_31
syscall
li $v0 1  # printf int
move $a0 $s0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_32
syscall
li $v0 11  # char
li $a0 10
syscall
# call voidfunc: function3
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function3
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
# back from voidfunc: function3
# call func: function_cal
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function_cal
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
move $t4 $v0
# back from func: function_cal
addiu $t5 $t4 10 	# add_78
move $s0 $t5	# out_num
li $v0 4  # printf string
la $a0 string_33
syscall
li $v0 1  # printf int
move $a0 $s0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_34
syscall
li $v0 11  # char
li $a0 10
syscall
# call func: function_cal
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_function_cal
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
move $t6 $v0
# back from func: function_cal
addu $t7 $s0 $t6 	# add_79
move $s0 $t7	# out_num
li $v0 4  # printf string
la $a0 string_35
syscall
li $v0 1  # printf int
move $a0 $s0
syscall
li $v0 11  # char
li $a0 10
syscall
li $v0 4  # printf string
la $a0 string_36
syscall
li $v0 11  # char
li $a0 10
syscall
# call voidfunc: Complex_Compute
addiu $sp $sp -0
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_Complex_Compute
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 0
# back from voidfunc: Complex_Compute
j f_main_return
# writeBack
sw $t0 28($sp)	# fcall_447
sw $t1 24($sp)	# fcall_448
sw $t2 20($sp)	# sub_77
sw $t3 16($sp)	# fcall_451
sw $t4 12($sp)	# fcall_457
sw $t5 8($sp)	# add_78
sw $t6 4($sp)	# fcall_465
sw $t7 0($sp)	# add_79
# end writeBack
f_main_return:
