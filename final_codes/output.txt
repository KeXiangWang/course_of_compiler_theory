.data
global_a_const_int: .word 1
global_A_const_char: .word 65
global_a_var_int: .word 0
global_a_var_int_arr: .space 20
global_a_var_char_arr: .space 20
string_0: .asciiz  " A(-+11)= "
string_1: .asciiz  " calc A ="
string_2: .asciiz  "input1>input2 "
string_3: .asciiz  "input1<input2 "
string_4: .asciiz  "input1==input2 "
string_5: .asciiz  " four param cal="
string_6: .asciiz  "scanf two int "
string_7: .asciiz  "get_gcd a and A= "
string_8: .asciiz  " fourparam return= "
string_9: .asciiz  "\\n\\n\\n const A_const_char= "
string_10: .asciiz  "\\\\n\\\\n\\\\n a_var_char_arr[4]= "
.text
j f_main




f_fibo:
addiu $sp $sp -64
sw $ra 60($sp)
sw $fp 56($sp)
sw $s0 52($sp)
sw $s1 48($sp)
sw $s2 44($sp)
sw $s3 40($sp)
sw $s4 36($sp)
sw $s5 32($sp)
sw $s6 28($sp)
sw $s7 24($sp)
sw $a0 96($sp)
label_0:
lw $t0 96($sp)	#n
li $t1 1	#const_int_2
# writeBack
sw $t0 96($sp)	# n
# end writeBack
bne $t0 $t1 label_1
# writeBack
# end writeBack
label_2:
li $v0 1	#const_int_5
j f_fibo_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_1:
lw $t0 96($sp)	#n
li $t1 2	#const_int_10
# writeBack
sw $t0 96($sp)	# n
# end writeBack
bne $t0 $t1 label_3
# writeBack
# end writeBack
label_4:
li $v0 1	#const_int_13
j f_fibo_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_3:
lw $t0 96($sp)	#n
subiu $t1 $t0 1 	# sub_0
# call func: fibo
addiu $sp $sp -4
move $a0 $t1
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_fibo
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 96($sp)
move $t2 $v0
# back from func: fibo
subiu $t3 $t0 2 	# sub_1
# call func: fibo
addiu $sp $sp -4
move $a0 $t3
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_fibo
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 96($sp)
move $t4 $v0
# back from func: fibo
addu $t5 $t2 $t4 	# add_2
move $v0 $t5
j f_fibo_return
# writeBack
sw $t0 96($sp)	# n
sw $t1 16($sp)	# sub_0
sw $t2 12($sp)	# fcall_20
sw $t3 8($sp)	# sub_1
sw $t4 4($sp)	# fcall_24
sw $t5 0($sp)	# add_2
# end writeBack
# writeBack
# end writeBack
label_5:
# writeBack
# end writeBack
label_6:
f_fibo_return:
lw $s0 52($sp)
lw $s1 48($sp)
lw $s2 44($sp)
lw $s3 40($sp)
lw $s4 36($sp)
lw $s5 32($sp)
lw $s6 28($sp)
lw $s7 24($sp)
lw $ra 60($sp)
lw $fp 56($sp)
addiu $sp $sp 64
jr $ra


f_test_base:
addiu $sp $sp -96
sw $ra 92($sp)
sw $fp 88($sp)
sw $s0 84($sp)
sw $s1 80($sp)
sw $s2 76($sp)
sw $s3 72($sp)
sw $s4 68($sp)
sw $s5 64($sp)
sw $s6 60($sp)
sw $s7 56($sp)
sw $a0 128($sp)
sw $a1 132($sp)
li $s0 1
label_7:
li $t0 -11 	# sub_3
move $s1 $t0	# A
li $t1 1	#const_int_32
# writeBack
sw $t0 36($sp)	# sub_3
# end writeBack
bne $s0 $t1 label_8
# writeBack
# end writeBack
label_9:
li $t0 0	#const_int_36
# writeBack
# end writeBack
ble $s0 $t0 label_10
# writeBack
# end writeBack
label_11:
# writeBack
# end writeBack
beqz $s0  label_12
# writeBack
# end writeBack
label_13:
li $v0 4  # printf string
la $a0 string_0
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
# writeBack
# end writeBack
j label_14
# writeBack
# end writeBack
label_12:
# writeBack
# end writeBack
label_14:
# writeBack
# end writeBack
j label_15
# writeBack
# end writeBack
label_10:
# writeBack
# end writeBack
label_15:
# writeBack
# end writeBack
j label_16
# writeBack
# end writeBack
label_8:
# writeBack
# end writeBack
label_16:
li $t0 11 	# sub_4
subiu $t1 $t0 11 	# sub_5
addiu $t2 $t1 -11 	# add_6
# call func: fibo
addiu $sp $sp -4
li $a0 5	#const_int_57
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_fibo
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 4
lw $a0 128($sp)
lw $a1 132($sp)
move $t3 $v0
# back from func: fibo
addu $t4 $t2 $t3 	# add_7
li $t5 1	#const_int_60
li $t6 -2	#const_int_61
mul $t7 $t5 $t6 	# mult_8
sw $t0 32($sp)	# sub_4
addu $t0 $t4 $t7 	# add_9
sw $t0 8($sp)	# add_9
li $t0 9	#const_int_64
sw $t1 28($sp)	# sub_5
li $t1 3	#const_int_65
div $t0 $t0 $t1 	# div_10
sw $t0 4($sp)	# div_10
lw $t0 8($sp)	#add_9
lw $t1 4($sp)	#div_10
sw $t0 8($sp)	# add_9
subu $t0 $t0 $t1 	# sub_11
move $s1 $t0	# A
li $v0 4  # printf string
la $a0 string_1
syscall
li $v0 1  # printf int
move $a0 $s1
syscall
sw $t0 0($sp)	# sub_11
lw $t0 128($sp)	#input1
sw $t1 4($sp)	# div_10
lw $t1 132($sp)	#input2
# writeBack
sw $t0 128($sp)	# input1
sw $t1 132($sp)	# input2
sw $t2 24($sp)	# add_6
sw $t3 20($sp)	# fcall_58
sw $t4 16($sp)	# add_7
sw $t7 12($sp)	# mult_8
# end writeBack
ble $t0 $t1 label_17
# writeBack
# end writeBack
label_18:
li $v0 4  # printf string
la $a0 string_2
syscall
j f_test_base_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_17:
lw $t0 128($sp)	#input1
lw $t1 132($sp)	#input2
# writeBack
sw $t0 128($sp)	# input1
sw $t1 132($sp)	# input2
# end writeBack
bge $t0 $t1 label_19
# writeBack
# end writeBack
label_20:
li $v0 4  # printf string
la $a0 string_3
syscall
j f_test_base_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_19:
lw $t0 128($sp)	#input1
lw $t1 132($sp)	#input2
# writeBack
sw $t0 128($sp)	# input1
sw $t1 132($sp)	# input2
# end writeBack
bne $t0 $t1 label_21
# writeBack
# end writeBack
label_22:
li $v0 4  # printf string
la $a0 string_4
syscall
j f_test_base_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_21:
# writeBack
# end writeBack
label_23:
# writeBack
# end writeBack
label_24:
# writeBack
# end writeBack
label_25:
f_test_base_return:
lw $s0 84($sp)
lw $s1 80($sp)
lw $s2 76($sp)
lw $s3 72($sp)
lw $s4 68($sp)
lw $s5 64($sp)
lw $s6 60($sp)
lw $s7 56($sp)
lw $ra 92($sp)
lw $fp 88($sp)
addiu $sp $sp 96
jr $ra


f_get_gcd:
addiu $sp $sp -104
sw $ra 100($sp)
sw $fp 96($sp)
sw $s0 92($sp)
sw $s1 88($sp)
sw $s2 84($sp)
sw $s3 80($sp)
sw $s4 76($sp)
sw $s5 72($sp)
sw $s6 68($sp)
sw $s7 64($sp)
sw $a0 136($sp)
sw $a1 140($sp)
label_26:
lw $t0 136($sp)	#x
lw $t1 140($sp)	#y
# writeBack
sw $t0 136($sp)	# x
sw $t1 140($sp)	# y
# end writeBack
ble $t0 $t1 label_27
# writeBack
# end writeBack
label_28:
lw $t0 136($sp)	#x
move $s2 $t0	# temp
lw $t1 140($sp)	#y
move $t0 $t1	# x
move $t1 $s2	# y
# writeBack
sw $t0 136($sp)	# x
sw $t1 140($sp)	# y
# end writeBack
j label_29
# writeBack
# end writeBack
label_27:
# writeBack
# end writeBack
label_29:
lw $t0 140($sp)	#y
lw $t1 136($sp)	#x
div $t2 $t0 $t1 	# div_12
move $s0 $t2	# z
mul $t3 $s0 $t1 	# mult_13
move $s0 $t3	# z
subu $t4 $t0 $s0 	# sub_14
li $t5 0	#const_int_118
# writeBack
sw $t0 140($sp)	# y
sw $t1 136($sp)	# x
sw $t2 40($sp)	# div_12
sw $t3 36($sp)	# mult_13
sw $t4 32($sp)	# sub_14
# end writeBack
bne $t4 $t5 label_30
# writeBack
# end writeBack
label_31:
lw $v0 136($sp)	#x
j f_get_gcd_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_30:
# writeBack
# end writeBack
label_32:
lw $t0 136($sp)	#x
li $t1 2	#const_int_126
div $t2 $t0 $t1 	# div_15
move $s1 $t2	# i
# writeBack
sw $t0 136($sp)	# x
sw $t2 28($sp)	# div_15
# end writeBack
label_33:
li $t0 1	#const_int_130
# writeBack
# end writeBack
ble $s1 $t0 label_34
lw $t0 136($sp)	#x
div $t1 $t0 $s1 	# div_16
move $s0 $t1	# z
mul $t2 $s0 $s1 	# mult_17
move $s0 $t2	# z
subu $t3 $t0 $s0 	# sub_18
li $t4 0	#const_int_144
# writeBack
sw $t0 136($sp)	# x
sw $t1 24($sp)	# div_16
sw $t2 20($sp)	# mult_17
sw $t3 16($sp)	# sub_18
# end writeBack
bne $t3 $t4 label_35
# writeBack
# end writeBack
label_36:
lw $t0 140($sp)	#y
div $t1 $t0 $s1 	# div_19
move $s0 $t1	# z
mul $t2 $s0 $s1 	# mult_20
move $s0 $t2	# z
subu $t3 $t0 $s0 	# sub_21
li $t4 0	#const_int_158
# writeBack
sw $t0 140($sp)	# y
sw $t1 12($sp)	# div_19
sw $t2 8($sp)	# mult_20
sw $t3 4($sp)	# sub_21
# end writeBack
bne $t3 $t4 label_37
# writeBack
# end writeBack
label_38:
move $v0 $s1
j f_get_gcd_return
# writeBack
# end writeBack
# writeBack
# end writeBack
label_37:
# writeBack
# end writeBack
label_39:
# writeBack
# end writeBack
j label_40
# writeBack
# end writeBack
label_35:
# writeBack
# end writeBack
label_40:
subiu $t0 $s1 1 	# sub_22
move $s1 $t0	# i
# writeBack
sw $t0 0($sp)	# sub_22
# end writeBack
j label_33
# writeBack
# end writeBack
label_34:
li $v0 1	#const_int_173
j f_get_gcd_return
# writeBack
# end writeBack
f_get_gcd_return:
lw $s0 92($sp)
lw $s1 88($sp)
lw $s2 84($sp)
lw $s3 80($sp)
lw $s4 76($sp)
lw $s5 72($sp)
lw $s6 68($sp)
lw $s7 64($sp)
lw $ra 100($sp)
lw $fp 96($sp)
addiu $sp $sp 104
jr $ra


f_fourparam:
addiu $sp $sp -88
sw $ra 84($sp)
sw $fp 80($sp)
sw $s0 76($sp)
sw $s1 72($sp)
sw $s2 68($sp)
sw $s3 64($sp)
sw $s4 60($sp)
sw $s5 56($sp)
sw $s6 52($sp)
sw $s7 48($sp)
sw $a0 120($sp)
sw $a1 124($sp)
sw $a2 128($sp)
sw $a3 132($sp)
label_41:
li $s0 -22	# temp
lw $t0 120($sp)	#a
lw $t1 124($sp)	#b
addu $t2 $t0 $t1 	# add_23
move $t0 $t2	# a
addu $t3 $t0 $t1 	# add_24
move $t1 $t3	# b
mul $t4 $t0 $t1 	# mult_25
addu $t5 $t4 $t0 	# add_26
move $t0 $t5	# a
lb $t6 128($sp)	#c
addu $t7 $t6 $t0 	# add_27
move $t0 $t7	# a
sw $t0 120($sp)	# a
lb $t0 132($sp)	#d
sw $t1 124($sp)	# b
lw $t1 120($sp)	#a
sw $t1 120($sp)	# a
addu $t1 $t0 $t1 	# add_28
sb $t0 132($sp)	# d
move $t0 $t1	# a
sw $t0 120($sp)	# a
addu $t0 $s0 $t0 	# add_29
sb $t6 128($sp)	# c
move $t6 $t0	# a
li $v0 4  # printf string
la $a0 string_5
syscall
li $v0 1  # printf int
move $a0 $t6
syscall
lb $v0 132($sp)	#d
j f_fourparam_return
# writeBack
sw $t0 0($sp)	# add_29
sw $t1 4($sp)	# add_28
sw $t2 24($sp)	# add_23
sw $t3 20($sp)	# add_24
sw $t4 16($sp)	# mult_25
sw $t5 12($sp)	# add_26
sw $t6 120($sp)	# a
sw $t7 8($sp)	# add_27
# end writeBack
f_fourparam_return:
lw $s0 76($sp)
lw $s1 72($sp)
lw $s2 68($sp)
lw $s3 64($sp)
lw $s4 60($sp)
lw $s5 56($sp)
lw $s6 52($sp)
lw $s7 48($sp)
lw $ra 84($sp)
lw $fp 80($sp)
addiu $sp $sp 88
jr $ra


f_main:
addiu $sp $sp -92
label_42:
li $s0 0	# i
li $s3 5	# len
li $s0 0	# i
# writeBack
# end writeBack
label_43:
# writeBack
# end writeBack
bge $s0 $s3 label_44
# a_var_int_arr
move $t8  $s0
sll $t8 $t8 2
sw $s0 global_a_var_int_arr($t8 )
addiu $t0 $s0 1 	# add_30
move $s0 $t0	# i
# writeBack
sw $t0 24($sp)	# add_30
# end writeBack
j label_43
# writeBack
# end writeBack
label_44:
li $s0 0	# i
# writeBack
# end writeBack
label_45:
li $t0 97	#const_char_229
# a_var_char_arr
move $t8  $s0
sll $t8 $t8 2
sb $t0 global_a_var_char_arr($t8 )
addiu $t1 $s0 1 	# add_31
move $s0 $t1	# i
# writeBack
sw $t1 20($sp)	# add_31
# end writeBack
bge $s0 $s3 label_46
# writeBack
# end writeBack
j label_45
# writeBack
# end writeBack
label_46:
li $v0 4  # printf string
la $a0 string_6
syscall
li $v0 5
syscall
move $s1 $v0
li $v0 5
syscall
move $s2 $v0
# call voidfunc: test_base
addiu $sp $sp -8
move $a0 $s1
move $a1 $s2
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_test_base
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
# back from voidfunc: test_base
# call func: get_gcd
addiu $sp $sp -8
move $a0 $s1
move $a1 $s2
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_get_gcd
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 8
move $t0 $v0
# back from func: get_gcd
	# a_var_int
sw $t0  global_a_var_int	#a_var_int
li $v0 4  # printf string
la $a0 string_7
syscall
li $v0 1  # printf int
lw $a0 global_a_var_int	#a_var_int
syscall
li $v0 12
syscall
move $s5 $v0
li $v0 12
syscall
move $s4 $v0
# call func: fourparam
addiu $sp $sp -16
move $a0 $s1
move $a1 $s2
move $a2 $s5
move $a3 $s4
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $t4 16($sp)
sw $t5 20($sp)
sw $t6 24($sp)
sw $t7 28($sp)
jal f_fourparam
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $t4 16($sp)
lw $t5 20($sp)
lw $t6 24($sp)
lw $t7 28($sp)
addiu $sp $sp 32
addiu $sp $sp 16
move $t1 $v0
# back from func: fourparam
move $s4 $t1	# C
li $v0 4  # printf string
la $a0 string_8
syscall
li $v0 11  # printf char
move $a0 $s4
syscall
li $v0 4  # printf string
la $a0 string_9
syscall
li $v0 11  # printf char
lb $a0 global_A_const_char	#A_const_char
syscall
li $t2 1	#const_int_268
li $t3 2	#const_int_269
mul $t4 $t2 $t3 	# mult_32
addiu $t5 $t4 1 	# add_33
addiu $t6 $t5 1 	# add_34
li $v0 4  # printf string
la $a0 string_10
syscall
li $v0 11  # printf char
move $a0  $t6
sll $a0 $a0 2
lb $a0 global_a_var_char_arr($a0 )
syscall
j f_main_return
# writeBack
sw $t0 16($sp)	# fcall_250
sb $t1 12($sp)	# fcall_261
sw $t4 8($sp)	# mult_32
sw $t5 4($sp)	# add_33
sw $t6 0($sp)	# add_34
# end writeBack
f_main_return:
